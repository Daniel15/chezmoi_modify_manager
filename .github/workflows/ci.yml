name: Continuous integration

permissions:
  contents: read

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test - ${{ matrix.target }} with rust ${{ matrix.rust }} (default configuration)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
        rust:
          - stable
          - beta
          - nightly
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - name: Install cross
        uses: taiki-e/install-action@cross
      - name: Cross compile and test
        run: cross test --target ${{ matrix.target }} --verbose

  odd-ssls:
    name: Test - "${{ matrix.features }}" on Linux with stable rust
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        features:
          - --no-default-features
          - --no-default-features --features=updater-tls-native
          - --no-default-features --features=updater-tls-native-vendored
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: Compile and test
        run: cargo test ${{ matrix.features }} --verbose

  exotic-linux:
    name: Test - ${{ matrix.target }} with rust ${{ matrix.rust }} (vendored OpenSSL)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          # Test targets that won't build with rusttls
          - i586-unknown-linux-gnu
          - mips64-unknown-linux-gnuabi64
          - powerpc-unknown-linux-gnu
          - powerpc64-unknown-linux-gnu
          - riscv64gc-unknown-linux-gnu
        rust:
          - stable
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - name: Install cross
        uses: taiki-e/install-action@cross
      - name: Cross compile and test
        run: cross test --no-default-features --features=updater-tls-native-vendored --target ${{ matrix.target }} --verbose

  exotic-platforms:
    name: Test - ${{ matrix.target }} on ${{ matrix.os }} with stable rust
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: Compile and test
        run: cargo test --target ${{ matrix.target }} --verbose
